{"version":3,"file":"static/js/546.a8fa3b3a.chunk.js","mappings":"+QAGaA,EAAeC,EAAAA,GAAAA,OAAH,6SAkBZC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,IAAPF,CAAH,8CAITG,EAAYH,EAAAA,GAAAA,IAAH,4DAKTI,EAAQJ,EAAAA,GAAAA,IAAH,yCAILK,EAAcL,EAAAA,GAAAA,IAAH,qFAQXM,EAAON,EAAAA,GAAAA,EAAH,2CAIJO,EAAQP,EAAAA,GAAAA,KAAH,gEAMLQ,EAAcR,EAAAA,GAAAA,IAAH,0CAIXS,EAAkBT,EAAAA,GAAAA,GAAH,qEAKfU,EAAkBV,EAAAA,GAAAA,GAAH,sI,+CCvCb,SAASW,IAAqB,IAAD,EAClCC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,8GAEsBC,EAAAA,EAAAA,IAAiBV,GAFvC,OAESW,EAFT,OAGGP,EAASO,GAHZ,gDAKGN,EAAS,KALZ,yDAAD,yDAQC,CAACL,EAASK,KAOX,iCACE,UAAClB,EAAD,CAAcyB,KAAK,SAASC,QANhC,WAAmB,IAAD,IAChBR,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUO,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAKhC,WACE,SAAC1B,EAAD,IADF,aAICc,IACC,UAACZ,EAAD,YACE,SAACC,EAAD,CACEwB,IACEb,EAAMc,YAAN,6CAC0Cd,EAAMc,aAC5C,0EAENC,IAAKf,EAAMgB,SAEb,UAAC1B,EAAD,YACE,oCACGU,EAAMgB,aADT,QACkBhB,EAAMiB,MACtB,gCAAQC,OAAOC,SAASnB,EAAMoB,cAA9B,WAEF,UAAC7B,EAAD,sBAAeS,EAAMqB,iBACrB,sCACA,SAAC9B,EAAD,UAAOS,EAAMsB,YACb,oCACA,SAAC/B,EAAD,UACGS,EAAMuB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIR,EAAP,EAAOA,KAAP,OAChB,SAACzB,EAAD,UAAiByB,GAALQ,eAMtB,mBACA,UAAChC,EAAD,YACE,mDACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAM+B,GAAG,OAAT,qBAEF,SAAC/B,EAAD,WACE,SAAC,KAAD,CAAM+B,GAAG,UAAT,8BAIN,mBACA,SAAC,KAAD","sources":["components/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiOutlineArrowLeft } from 'react-icons/hi';\n\nexport const GoBackButton = styled.button`\n  display: flex;\n  align-items: center;\n  color: #ffffff;\n  background-color: #3f3f40;\n  padding: 8px;\n  margin-top: 20px;\n  margin-left: 20px;\n  border-radius: 8px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: #f0f0f0;\n  }\n`;\n\nexport const ArrowLeft = styled(HiOutlineArrowLeft)`\n  margin-right: 8px;\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  padding: 20px;\n`;\n\nexport const Image = styled.img`\n  width: 360px;\n`;\n\nexport const DetailsInfo = styled.div`\n  margin-left: 20px;\n\n  & .p {\n    margin: 20px, 0;\n  }\n`;\n\nexport const Text = styled.p`\n  margin: 20px 0;\n`;\n\nexport const Genre = styled.span`\n  & + & {\n    margin-left: 12px;\n  }\n`;\n\nexport const Information = styled.div`\n  padding: 20px;\n`;\n\nexport const InformationList = styled.ul`\n  padding-top: 20px;\n  padding-left: 40px;\n`;\n\nexport const InformationItem = styled.ul`\n  color: blue;\n  text-decoration: underline;\n  list-style: inside;\n  & + & {\n    padding-top: 12px;\n  }\n`;\n","import {\n  Image,\n  MovieCard,\n  DetailsInfo,\n  Text,\n  Genre,\n  Information,\n  InformationList,\n  InformationItem,\n  GoBackButton,\n  ArrowLeft,\n} from 'components/MovieDetailsPage/MovieDetailsPage.styled';\nimport { useEffect, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { fetchDetailsFilm } from 'services/servicesApi';\n\nexport default function MoviesDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async function datailsFilm() {\n      try {\n        const data = await fetchDetailsFilm(movieId);\n        setMovie(data);\n      } catch (error) {\n        navigate('/');\n      }\n    })();\n  }, [movieId, navigate]);\n\n  function goBack() {\n    navigate(location?.state?.from ?? '/');\n  }\n\n  return (\n    <>\n      <GoBackButton type=\"button\" onClick={goBack}>\n        <ArrowLeft />\n        Go back\n      </GoBackButton>\n      {movie && (\n        <MovieCard>\n          <Image\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                : 'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png'\n            }\n            alt={movie.title}\n          />\n          <DetailsInfo>\n            <h2>\n              {movie.title ?? movie.name}\n              <span>({Number.parseInt(movie.release_date)})</span>\n            </h2>\n            <Text>Rating: {movie.vote_average}</Text>\n            <h3>Owerview</h3>\n            <Text>{movie.overview}</Text>\n            <h4>Genres</h4>\n            <Text>\n              {movie.genres.map(({ id, name }) => (\n                <Genre key={id}>{name}</Genre>\n              ))}\n            </Text>\n          </DetailsInfo>\n        </MovieCard>\n      )}\n      <hr />\n      <Information>\n        <p>Additional information</p>\n        <InformationList>\n          <InformationItem>\n            <Link to=\"cast\">Cast</Link>\n          </InformationItem>\n          <InformationItem>\n            <Link to=\"reviews\">Reviews</Link>\n          </InformationItem>\n        </InformationList>\n      </Information>\n      <hr />\n      <Outlet />\n    </>\n  );\n}\n"],"names":["GoBackButton","styled","ArrowLeft","HiOutlineArrowLeft","MovieCard","Image","DetailsInfo","Text","Genre","Information","InformationList","InformationItem","MoviesDetailsPage","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","useEffect","fetchDetailsFilm","data","type","onClick","state","from","src","poster_path","alt","title","name","Number","parseInt","release_date","vote_average","overview","genres","map","id","to"],"sourceRoot":""}