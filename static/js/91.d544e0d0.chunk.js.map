{"version":3,"file":"static/js/91.d544e0d0.chunk.js","mappings":"gNAGaA,EAAOC,EAAAA,GAAAA,GAAH,8GAQJC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qEAKTG,EAAaH,EAAAA,GAAAA,GAAH,iFAKVI,EAAQJ,EAAAA,GAAAA,IAAH,sFAMLK,EAAQL,EAAAA,GAAAA,GAAH,sB,SCzBLM,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnC,OACE,SAACT,EAAD,UACGQ,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACV,SAACV,EAAD,WACE,UAACF,EAAD,CAAWa,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMR,GAA/C,WACE,SAACJ,EAAD,CACEa,IACEJ,EAAW,8CACgCA,GACvC,0EAENK,IAAG,OAAEP,QAAF,IAAEA,EAAAA,EAASC,KAEhB,SAACP,EAAD,iBAAQM,QAAR,IAAQA,EAAAA,EAASC,QAVJF,U,qLCJZS,EAAOnB,EAAAA,GAAAA,KAAH,6LAUJoB,EAAQpB,EAAAA,GAAAA,MAAH,uGAOLqB,EAASrB,EAAAA,GAAAA,OAAH,mQ,SCbJ,SAASsB,EAAWC,GACjC,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAOjB,EAAP,KAAeuB,EAAf,KACMtB,GAAWuB,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,EAAaK,IAAI,UAGtB,mCAAC,8GAE0BC,EAAAA,EAAAA,IAAkBN,GAF5C,OAESO,EAFT,OAGGL,EAAUK,GAHb,gDAKGC,QAAQC,MAAR,MALH,yDAAD,yDAQC,CAACT,IAYJ,OACE,iCACE,UAACT,EAAD,CAAMmB,SARU,SAAAC,GAClBA,EAAEC,iBACFX,EAAgB,CAAEJ,MAAAA,IAClBC,EAAS,KAKP,WACE,SAACN,EAAD,CAAOqB,KAAK,OAAOC,MAAOjB,EAAOkB,SAbnB,SAAAJ,GAClBb,EAASa,EAAEK,cAAcF,WAarB,SAACrB,EAAD,CAAQoB,KAAK,SAAb,uBAEDlC,IAAU,SAAC,IAAD,CAAYA,OAAQA,EAAQC,SAAUA","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/MoviesPage/MoviesPage.styled.js","pages/MoviesPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  padding: 24px;\n`;\n\nexport const LinkMovie = styled(Link)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MoviesItem = styled.li`\n  flex-basis: calc((100% - 80px) / 4);\n  margin: 10px;\n`;\n\nexport const Image = styled.img`\n  flex-grow: 1;\n  /* width: 100%; */\n  /* height: 100%; */\n`;\n\nexport const Title = styled.h4``;\n","import { MoviesItem, List, Image, Title, LinkMovie } from './MovieList.styled';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ id, title, name, poster_path }) => (\n        <MoviesItem key={id}>\n          <LinkMovie to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/original/${poster_path}`\n                  : 'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png'\n              }\n              alt={title ?? name}\n            />\n            <Title>{title ?? name}</Title>\n          </LinkMovie>\n        </MoviesItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  max-width: 400px;\n  margin: 20px auto 0;\n  border: 2px solid #3f3f40;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  font-size: 16px;\n  font-weight: 600;\n  padding-left: 8px;\n`;\n\nexport const Button = styled.button`\n  color: #000000;\n  background-color: #f0f0f0;\n\n  font-size: 16px;\n  font-weight: 600;\n\n  padding: 8px;\n  cursor: pointer;\n  border: 0;\n  outline: none;\n\n  :hover {\n    color: #ffffff;\n    background-color: #3f3f40;\n  }\n`;\n","import { MoviesList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'services/servicesApi';\nimport { Button, Form, Input } from 'components/MoviesPage/MoviesPage.styled';\n\nexport default function MoviesPage(params) {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n    (async function fetchMovies() {\n      try {\n        const response = await fetchSearchMovies(searchParams);\n        setMovies(response);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [searchParams]);\n\n  const handlChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handlSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handlSubmit}>\n        <Input type=\"text\" value={query} onChange={handlChange}></Input>\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {movies && <MoviesList movies={movies} location={location} />}\n    </>\n  );\n}\n"],"names":["List","styled","LinkMovie","Link","MoviesItem","Image","Title","MoviesList","movies","location","map","id","title","name","poster_path","to","state","from","src","alt","Form","Input","Button","MoviesPage","params","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","setMovies","useLocation","useEffect","get","fetchSearchMovies","response","console","error","onSubmit","e","preventDefault","type","value","onChange","currentTarget"],"sourceRoot":""}